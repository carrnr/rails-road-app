<%= render 'form' %>

<div class="map-container">
  <div id="map"></div>
</div>

<script>
var coordinates_array = []

initMapNew = function() {

    var mapOptions = {
      center: {lat: 43.777167, lng: -79.231510},
      zoom: 13
    };

    var map = new google.maps.Map(document.getElementById('map'), mapOptions);

    var poly = new google.maps.Polyline({
      strokeColor: '#ba0b0b',
      strokeOpacity: 1.0,
      strokeWeight: 5
    });

    poly.setMap(map);

    // Add a listener for the click event
    map.addListener('click', addLatLng);


    // Handles click events on a map, and adds a new point to the Polyline.
     function addLatLng(event) {
        var path = poly.getPath();

        var point = [(event.latLng.lat()), (event.latLng.lng())]
        console.log(point);

        coordinates_array.push(point);

        // Because path is an MVCArray, we can simply append a new coordinate
        // and it will automatically appear.
        path.push(event.latLng);


        // and it will automatically appear.

        // set variable for all input fields
      var inputs = $(".points");

      // loop through the inputs and fill each one with new coordinate
        for (var i=0; i<inputs.length; i++) {
          if (inputs[i].value === "") {
            inputs[i].value = coordinates_array;
            break;
          }
        }


        // Add a new marker at the new plotted point on the polyline.
        var marker = new google.maps.Marker({
          position: event.latLng,
          title: '#' + path.getLength(),
          map: map
        });
      }

};

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCqsCaOw8_xtZ37g3_YWkIiwKlvMva7c7k&callback=initMapNew"></script>
